{"title":"Data Visualization","markdown":{"yaml":{"embed-resources":true},"headingText":"Data Visualization","containsRefs":false,"markdown":"\n\n\n## Basics\n\n:::{style=\"text-align:justify\"}\n\nThe present session will focus on basics of data visualization. \n\n:::\n\n### Statistical Underpinnings\n\n:::{style=\"text-align:justify\"}\n\nBefore we start with learning how to create graphs/ plots/ figures using R, it is important to understand that the selection of type of plots is dependent entirely upon the number and type of variables selected. Though we are not covering the bio statistics module, it is strongly recommended that the same be refreshed and strengthened by participants from time to time for advanced use of data analytics in future.\n\n:::\n\n### Programming Basics\n\n:::{style=\"text-align:justify\"}\n\nData visualization is a powerful tool for data science in epidmeiology. The basics of programming for creating plots using `ggplot` package includes understanding of four important aspects.\n\n1.  Use of reusable/ reproducible **templates**.\n2.  Creation of different types of plots using **geoms**.\n3.  Addition of variables using **mapping**.\n4.  Customization of plots using **settings**.\n\nFor illustration of concepts, we will be using `birthwt` data set from `MASS` package which includes data on `Risk Factors Associated with Low Infant Birth Weight` in the present session.\n\n:::\n\n## About the dataset\n\n> `birthwt` dataset from the `MASS` package\n\n:::{style=\"text-align:justify\"}\n\nFor illustrative examples in the sections on data visualization, data analysis, and summary tables, Risk Factors Associated with Low Infant Birth Weight dataset (`birthwt`) dataset has been used. It is an inbuilt dataset from the package `MASS`. To load the dataset, type the following R code\n\n```{r}\ndf <- readxl::read_excel(here::here(\"data\", \"birthwt.xlsx\"))\n```\n\nSince, it has been labelled as `df`, it has been reffered as `df` from here on. The dataset used has 189 rows and 10 columns. The data were collected at Baystate Medical Center, Springfield, Mass during 1986. The variables present in the data includes the following variables/ columns:-\n\n1.  `low` : indicator of birth weight less than 2.5 kg\n2.  `age`: mother's age in years\n3.  `lwt`: mother's weight in pounds at last menstrual period\n4.  `race` : mother's race (1 = white, 2 = black, 3 = other)\n5.  `smoke` : smoking status during pregnancy\n6.  `ptl` : number of previous premature labours\n7.  `ht` : history of hypertension\n8.  `ui` : presence of uterine irritability\n9.  `ftv` : number of physician visits during the first trimester\n10. `bwt` : birth weight in grams\n\n\\textbf{Source:} Hosmer, D.W. and Lemeshow, S. (1989) Applied Logistic Regression. New York: Wiley\n\n\\textbf{Reference:} Venables, W. N. and Ripley, B. D. (2002) Modern Applied Statistics with S. Fourth edition. Springer.\n\n:::\n\n## Load Dataset\n\n```{r}\n# install.packages(\"tidyverse\")  includes ggplot\n# install.packages(\"MASS\") includes multiple data sets for learning purposes\noptions(tidyverse.quiet = TRUE)\nlibrary(tidyverse)\ndf <- MASS::birthwt\n```\n\nData cleaning \n\n```{r}\ndf <- df |> \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) |> \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) |> \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n## Visualization of single variable.\n\n### Continous variable\n\n:::{style=\"text-align:justify\"}\n\nFor illustration, we will plot birth weights to understand the distribution pattern among all study participants in birth weight data set.\n\n:::\n\n#### Histogram\n\n:::{style=\"text-align:justify\"}\n\n`geom_histogram` visualize the distribution of a single continuous variable by dividing the x axis into bins and counting the number of observations in each bin. Histograms `geom_histogram()` display the counts with bars\n\n\n```{r}\nggplot(data = df, aes(x = bwt)) + # Template\n  geom_histogram( # geom\n    mapping = aes(y = after_stat(density)), # mapping\n    binwidth = 350, # mandatory settings\n    color = \"blue\", # optional settings\n    fill = \"red\",\n    linetype = 1,\n    alpha = 0.5,\n    size = 1) +\n  geom_density(color = 'darkgreen', linetype = 1, linewidth = 2)\n```\n\n**Tips**\n\n-   Color: Determines color of the lines of histogram\n\n-   Fill: Fills the histogram with specified color\n\n-   Linetype: try numbers from 0 to 6\n\n-   Alpha: Used for transparency adjustments. Varies from 0 (transparent) to 1 (Opaque)\n\n-   Size: Determines thicknes of the lines\n\n:::\n\n#### Frequency polygon\n\n:::{style=\"text-align:justify\"}\n\n`geom_freqpoly()` display the counts with lines. Further, frequency polygons are more suitable when you want to compare the distribution across the levels of a categorical variable (we shall see later!).\n\n```{r}\nggplot(data = df) +\n  geom_freqpoly(mapping = aes(x = bwt),\n                binwidth = 350) # Alternative use of bins\n```\n\n:::\n\n#### Dot plot\n\n:::{style=\"text-align:justify\"}\n\nIn a dot plot, the width of a dot corresponds to the bin width, and dots are stacked, with each dot representing one observation.\n\n```{r}\nggplot(data = df) +\n  geom_dotplot(mapping = aes(x = bwt),\n               binwidth = 150) \n```\n:::\n\n#### Box and whisker plot\n\n:::{style=\"text-align:justify\"}\n\nThe boxplot compactly displays the distribution of a continuous variable. It visualizes five summary statistics (the median, two hinges and two whiskers), and all \"outlying\" points individually.\n\n```{r }\nggplot(data = df) +\n  geom_boxplot(mapping = aes(y = bwt),\n               coef = 1.5) \n\n```\n\nWhat happens if we change the `coef` argument to 3?\n\n:::\n\n#### Density plot\\newline  \n\n:::{style=\"text-align:justify\"}\n\n`geom_density` computes and draws kernel density estimate, which is a smoothed version of the histogram. This is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\n```{r}\nggplot(data = df) + \n  geom_density(mapping = aes(x = bwt))\n```\n\n**Tip**\n\nMultiple plots can be combined for enhanced visualization. For example, we can combine histogram and frequency polygon.\n\n```{r}\n##Create a histogram and save it as an object\nhistogram <- ggplot(data = df) + \n  geom_histogram( \n    mapping = aes(x = bwt), \n    binwidth = 350, \n    color = \"blue\",\n    fill = \"red\",\n    alpha = 0.2) \n##Add a frequency polygon\nhistogram +  \n  geom_freqpoly(mapping = aes(x = bwt),\n                binwidth = 350)\n```\n\n:::\n\n### Discrete/ Categorical variable.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weight dataset, if we are interested to understand the distribution of smoking history (Present/Absent) among mothers.\n\n:::\n\n#### Bar Chart \\newline \n\n:::{style=\"text-align:justify\"}\n\n`geom_bar()` makes the height of the bar proportional to the number of cases in each group.\n\n```{r}\nggplot(data = df) +\n  geom_bar(mapping = aes(x = smoke)) \n```\n\n**Add optional arguments (settings) to enhance visualizations.**\n\nWhat happens if we provide y axis rather than x axis?\n\nWhat happens if instead of writing \\texttt{mapping = aes()}, we write only \\texttt{aes()} in the code chunk?\n\n:::\n\n## Visualization of two variables.\n\n### Two continous variables.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weights dataset, mother's weight at last menstrual period and birth weight of the infant are continuous variables. We might be interested in looking at how mother's weight is associated with birth weight of an infant.\n\n:::\n\n#### Scatter plot\n\n:::{style=\"text-align:justify\"}\n\nThe `geom_point` is used to create scatter plots. The scatter plot is most useful for displaying the relationship between two continuous variables.\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt), \n             color = \"red\",\n             size = 1,\n             shape = 1,\n             stroke = 1) \n\n```\n\n**Tips**\n\n-   Shape of a scatter plot can be changed using numbers (see below)\n\n-   Stroke argument in scatter plot determines the width of the border of the shapes\n\n-   In scatter plots, the fill argument works with selected shapes\n\n![](images/shapes_visualization.JPG){fig-align=\"center\" width=\"300\"}\n\n-   What happens if the size is changed to 10?\n\n-   When would you like to reduce the size further?\n\n-   Can we use geom_point to look at relationships between two variables, even if they are not continuous variables?\n\n-   Try using \\texttt{geom\\_jitter} instead of \\texttt{geom\\_point}. What do you observe?\n\n:::\n\n#### Scatter plot with regression line\n\n:::{style=\"text-align:justify\"}\n\nFurther, we can add a regression line to understand the relationship by using `geom_smooth`. It aids the eye in seeing patterns, especially in the presence of overplotting.\n\n```{r}\nggplot(data = df) +\n  geom_point(aes(x = lwt, y = bwt), \n             color = \"red\",\n             size = 1,\n             shape = 1,\n             stroke = 1) +\n  geom_smooth(aes(x = lwt, y = bwt),\n              method = lm,\n              se = T)\n\n```\n\n**Tips** Change the method to loess. What do you observe?\n\n:::\n\n### One discrete and one continous variable.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weights dataset, smoking history is categorical and birth weight is a continuous variable. We might be interested to estimate if maternal smoking history has effect on infant birth weights.\n\n:::\n\n#### Bar chart\n\n:::{style=\"text-align:justify\"}\n\nWhile using bar charts for two variables, an important additional argument which is used is `stat =` . Lets see!\n\n```{r}\nggplot(data = df) + \n  geom_bar(aes(x = smoke, y = bwt),\n           stat = \"identity\")\n```\n\nAlternatively, `geom_col` can be used. As compared to `geom_bar`, since counts the number of cases at each x position, additional argument `stat =` is not required.\n\n```{r}\nggplot(data = df) + \n  geom_col(aes(x = smoke, y = bwt))\n```\n\n:::\n\n#### Box and whisker plot\n\n```{r}\nggplot(data = df) + \n  geom_boxplot(aes(x = smoke, y = bwt),\n               coef = 1.5)\n```\n\n:::{style=\"text-align:justify\"}\n\n**Tips** Look at help menu to see additional arguments and change outlier color to red.\n:::\n\n#### Dot plot\n\n:::{style=\"text-align:justify\"}\n\nWhile creating a dot plot an additional mandatory argument in settings is `binaxis = \" \"`. The axis chosen is the axis with continuous variable.\n\nUse `geom_dotplot` to create dot plot between smoking history and birth weight.\n\n:::\n\n### Two discrete variables\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the dataset, smoking history and whether the infants birth weight was low or not are two discrete/ categorical variables. As a researcher, we would like to see the relationship between these two discrete variables.\n\n:::\n\n#### Position adjustments in bar chart\n\n:::{style=\"text-align:justify\"}\n\nTo see relationships between two discrete variables, multiple bar charts and component bar charts are used. Till now, the `fill` argument has been used in the `setting` section of the code. If you look carefully, while in the setting section, we manually placed the value/ color. The same argument can also be used in `mapping` section within `aesthetics`.\n\n```{r}\nggplot(data = df) + \n  geom_bar(aes(x = smoke, fill = race),\n           position = \"dodge\")\n```\n\nReplace \\texttt{position = \"dodge\"} to \\texttt{position = \"fill\"}. What happens?\n\n:::\n\n## Visualization of three variables.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weight dataset, a researcher is interested to look at relationship between maternal weight, smoking history, and infants birth weight.\n\n**Tip**\n\nWhen the setting arguments are shifted to mapping section, the computer automatically maps the value to develop the plot.\n\nTo visualize three or more variables, the settings arguments of color, shape, and size can be shifted to mapping section of the template we were using. Lets see!\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, color = smoke))\n```\n\n:::\n\n## Visualization of four variables.\n\n:::{style=\"text-align:justify\"}\n\nNow, lets see whether the race of mother is also playing a role in addition to her weight and smoking history in determining birth weight of the child\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, \n                 color = smoke, \n                 shape = factor(race)),\n             size = 3)\n```\n\nFor incorporating additional variables, multiple approaches such as 3D visualizations, animations, facet charts, etc can be used. For further details, refer to <https://exts.ggplot2.tidyverse.org/gallery/>\n\n:::\n\n## Facet plots.\n\n:::{style=\"text-align:justify\"}\n\n`facet_grid()` forms a matrix of panels defined by row and column faceting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data. If you have only one variable with many levels, try facet_wrap().\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, color = smoke))+\n  facet_grid(.~race)\n\n```\n\n-   What happens if we change \\texttt{.\\~ race} to \\texttt{race \\~ .}\n\n-   Use facet_wrap instead of `facet_grid`. What do you observe?\n\n:::\n\n## Way forward\n\n### Additional components\n\n:::{style=\"text-align:justify\"}\n\nNow, we know how to create the plot. However, plot has additional components such as title, subtitle, caption, axis labels, legend, etc. The same also requires deliberation and details for the same can be learnt from multiple resources. We recommend R Graphics Cookbook [*https://r-graphics.org/*](https://r-graphics.org/){.uri} as a good resource for the same. We are introducing you to this important aspect of data visualization, however considering the present workshop as an introductory workshop and with time constraints, we plan to cover these aspects during intermediate/ advanced levels only.\n\n```{r}\nggplot(data = df) + # Template\n  geom_freqpoly( # geom\n    mapping = aes(x = bwt, color = smoke), # mapping\n    binwidth = 400,\n    size = 1.5)  + \n  labs(title = \"Birth weight and maternal smoking\", # Title\n       subtitle = \"Density plots\", # Subtitle\n       caption = \"Source: Low Birth Weight data (MASS)\", # Caption\n       x = \"Birth Weights (grams)\", # x axis label\n       y = \"Frequency\",# y axis label\n       color = \"Maternal Smoking history\")  + # Legend title\n  geom_text(x = 2400, # Additional text in the plot\n            y = 10, \n            label = \" Ideal Birth weight\", \n            color = \"#990000\", # RGB color coding palette\n            angle = 90,\n            alpha = .5,)+\n  geom_vline(xintercept= 2500, colour=\"#009900\") + # Line insert \n  theme(legend.position = \"left\") + # Legend settings\n  theme_minimal() # Choosing background theme\n```\n\n### Maps\n\nR is a powerful programming language. It has capabilities to create its own GIS environment. Though spatial analytics including spatial data visualization requires additional packages, to introduce the domain, we shall be using India spatial file and make a basic map within the `tidyverse`!\n\n```{r eval=FALSE, include=FALSE, echo=T}\n#| eval: false\n#| include: false\n#| echo: true\n\n# Loading data \nindia_rintro2022 <- read_rds(\"india_rintro2022.rds\")\n# Creating base map\nggplot(data = india_rintro2022)+\n  geom_sf()\n```\n\n```{r echo=FALSE, fig.align=\"center\", fig.fullwidth=TRUE, out.width=\"60%\"}\nknitr::include_graphics(here::here('images',\"map1.JPG\") )\n```\n\nSince the map provided as demo is against the cartographic principles, despite being an introductory module, we would like you to get an exposure of cartographically correct map too!\n\n![](images/map2.JPG){fig-align=\"center\" width=\"500\"}\n\n```{r eval=FALSE, fig.cap=\"Map of states in India\", fig.fullwidth=T, fig.height=9, fig.width=12, message=FALSE, warning=FALSE, include=FALSE}\nlibrary(sf)\nindia_rintro2022$abbr <- c(\"LA\",\"AP\",\n                           \"AR\", \"AS\",\n                           \"BR\", \"CH\",\n                           \"CT\", \"DL\",\n                           \"GA\", \"GJ\",\n                           \"HR\", \"HP\",\n                           \"JH\", \"KA\",\n                           \"KL\", \"MP\",\n                           \"MH\",\"MN\",\n                           \"ML\", \"MZ\",\n                           \"NL\", \"OR\",\n                           \"PY\", \"PB\",\n                           \"RJ\", \"SK\",\n                           \"TN\", \"TR\",\n                           \"UP\", \"UT\",\n                           \"WB\", \"TG\",\n                           \"JK\", \"AN\",\n                           \"LD\", \"DN\")\n\nindia_rintro2022 <- cbind(india_rintro2022, st_coordinates(st_centroid(india_rintro2022)))\n\n\n\n\n\nggplot() +\n  geom_sf(data = india_rintro2022, aes(fill = factor(NAME_1))) + \n  labs(title = \"States in India\",\n       caption = \"Credits: AMCHSS, SCTIMST Geospatial library\",\n       fill = \"States\") +\n  xlab(\"Longitude\") +\n  ylab(\"Latitude\") +\n  ggspatial::annotation_north_arrow(location = \"tr\",\n                                    height = unit(1.5, \"cm\"),\n                                    width = unit(1.5, \"cm\"))+\n  ggspatial::annotation_scale(location = \"bl\") +\n  theme(legend.position = \"none\") +\n  geom_text(data = india_rintro2022, aes(x = X, y = Y, label = abbr),\n            color = \"black\", fontface = \"bold\", check_overlap = T, size = 2)\n```\n\n:::\n\n### Visual analytics\n\n:::{style=\"text-align:justify\"}\n\nThe domain of data visualization has gone beyond just visualizing data. Visual analytics and data visualization is now used across the data life cycle in epidemiology and health care. It has moved beyond descriptive epidemiology and is used for hypothesis testing, machine learning, artificial intelligence, time series analysis, spatio-temporal epidemiology, and many others.\n\nHope you have enjoyed the session! The Jump board is ready! Practice and see the power of visual analytics!! Best Wishes.\n\n:::","srcMarkdownNoYaml":"\n\n# Data Visualization\n\n## Basics\n\n:::{style=\"text-align:justify\"}\n\nThe present session will focus on basics of data visualization. \n\n:::\n\n### Statistical Underpinnings\n\n:::{style=\"text-align:justify\"}\n\nBefore we start with learning how to create graphs/ plots/ figures using R, it is important to understand that the selection of type of plots is dependent entirely upon the number and type of variables selected. Though we are not covering the bio statistics module, it is strongly recommended that the same be refreshed and strengthened by participants from time to time for advanced use of data analytics in future.\n\n:::\n\n### Programming Basics\n\n:::{style=\"text-align:justify\"}\n\nData visualization is a powerful tool for data science in epidmeiology. The basics of programming for creating plots using `ggplot` package includes understanding of four important aspects.\n\n1.  Use of reusable/ reproducible **templates**.\n2.  Creation of different types of plots using **geoms**.\n3.  Addition of variables using **mapping**.\n4.  Customization of plots using **settings**.\n\nFor illustration of concepts, we will be using `birthwt` data set from `MASS` package which includes data on `Risk Factors Associated with Low Infant Birth Weight` in the present session.\n\n:::\n\n## About the dataset\n\n> `birthwt` dataset from the `MASS` package\n\n:::{style=\"text-align:justify\"}\n\nFor illustrative examples in the sections on data visualization, data analysis, and summary tables, Risk Factors Associated with Low Infant Birth Weight dataset (`birthwt`) dataset has been used. It is an inbuilt dataset from the package `MASS`. To load the dataset, type the following R code\n\n```{r}\ndf <- readxl::read_excel(here::here(\"data\", \"birthwt.xlsx\"))\n```\n\nSince, it has been labelled as `df`, it has been reffered as `df` from here on. The dataset used has 189 rows and 10 columns. The data were collected at Baystate Medical Center, Springfield, Mass during 1986. The variables present in the data includes the following variables/ columns:-\n\n1.  `low` : indicator of birth weight less than 2.5 kg\n2.  `age`: mother's age in years\n3.  `lwt`: mother's weight in pounds at last menstrual period\n4.  `race` : mother's race (1 = white, 2 = black, 3 = other)\n5.  `smoke` : smoking status during pregnancy\n6.  `ptl` : number of previous premature labours\n7.  `ht` : history of hypertension\n8.  `ui` : presence of uterine irritability\n9.  `ftv` : number of physician visits during the first trimester\n10. `bwt` : birth weight in grams\n\n\\textbf{Source:} Hosmer, D.W. and Lemeshow, S. (1989) Applied Logistic Regression. New York: Wiley\n\n\\textbf{Reference:} Venables, W. N. and Ripley, B. D. (2002) Modern Applied Statistics with S. Fourth edition. Springer.\n\n:::\n\n## Load Dataset\n\n```{r}\n# install.packages(\"tidyverse\")  includes ggplot\n# install.packages(\"MASS\") includes multiple data sets for learning purposes\noptions(tidyverse.quiet = TRUE)\nlibrary(tidyverse)\ndf <- MASS::birthwt\n```\n\nData cleaning \n\n```{r}\ndf <- df |> \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) |> \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) |> \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n## Visualization of single variable.\n\n### Continous variable\n\n:::{style=\"text-align:justify\"}\n\nFor illustration, we will plot birth weights to understand the distribution pattern among all study participants in birth weight data set.\n\n:::\n\n#### Histogram\n\n:::{style=\"text-align:justify\"}\n\n`geom_histogram` visualize the distribution of a single continuous variable by dividing the x axis into bins and counting the number of observations in each bin. Histograms `geom_histogram()` display the counts with bars\n\n\n```{r}\nggplot(data = df, aes(x = bwt)) + # Template\n  geom_histogram( # geom\n    mapping = aes(y = after_stat(density)), # mapping\n    binwidth = 350, # mandatory settings\n    color = \"blue\", # optional settings\n    fill = \"red\",\n    linetype = 1,\n    alpha = 0.5,\n    size = 1) +\n  geom_density(color = 'darkgreen', linetype = 1, linewidth = 2)\n```\n\n**Tips**\n\n-   Color: Determines color of the lines of histogram\n\n-   Fill: Fills the histogram with specified color\n\n-   Linetype: try numbers from 0 to 6\n\n-   Alpha: Used for transparency adjustments. Varies from 0 (transparent) to 1 (Opaque)\n\n-   Size: Determines thicknes of the lines\n\n:::\n\n#### Frequency polygon\n\n:::{style=\"text-align:justify\"}\n\n`geom_freqpoly()` display the counts with lines. Further, frequency polygons are more suitable when you want to compare the distribution across the levels of a categorical variable (we shall see later!).\n\n```{r}\nggplot(data = df) +\n  geom_freqpoly(mapping = aes(x = bwt),\n                binwidth = 350) # Alternative use of bins\n```\n\n:::\n\n#### Dot plot\n\n:::{style=\"text-align:justify\"}\n\nIn a dot plot, the width of a dot corresponds to the bin width, and dots are stacked, with each dot representing one observation.\n\n```{r}\nggplot(data = df) +\n  geom_dotplot(mapping = aes(x = bwt),\n               binwidth = 150) \n```\n:::\n\n#### Box and whisker plot\n\n:::{style=\"text-align:justify\"}\n\nThe boxplot compactly displays the distribution of a continuous variable. It visualizes five summary statistics (the median, two hinges and two whiskers), and all \"outlying\" points individually.\n\n```{r }\nggplot(data = df) +\n  geom_boxplot(mapping = aes(y = bwt),\n               coef = 1.5) \n\n```\n\nWhat happens if we change the `coef` argument to 3?\n\n:::\n\n#### Density plot\\newline  \n\n:::{style=\"text-align:justify\"}\n\n`geom_density` computes and draws kernel density estimate, which is a smoothed version of the histogram. This is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\n```{r}\nggplot(data = df) + \n  geom_density(mapping = aes(x = bwt))\n```\n\n**Tip**\n\nMultiple plots can be combined for enhanced visualization. For example, we can combine histogram and frequency polygon.\n\n```{r}\n##Create a histogram and save it as an object\nhistogram <- ggplot(data = df) + \n  geom_histogram( \n    mapping = aes(x = bwt), \n    binwidth = 350, \n    color = \"blue\",\n    fill = \"red\",\n    alpha = 0.2) \n##Add a frequency polygon\nhistogram +  \n  geom_freqpoly(mapping = aes(x = bwt),\n                binwidth = 350)\n```\n\n:::\n\n### Discrete/ Categorical variable.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weight dataset, if we are interested to understand the distribution of smoking history (Present/Absent) among mothers.\n\n:::\n\n#### Bar Chart \\newline \n\n:::{style=\"text-align:justify\"}\n\n`geom_bar()` makes the height of the bar proportional to the number of cases in each group.\n\n```{r}\nggplot(data = df) +\n  geom_bar(mapping = aes(x = smoke)) \n```\n\n**Add optional arguments (settings) to enhance visualizations.**\n\nWhat happens if we provide y axis rather than x axis?\n\nWhat happens if instead of writing \\texttt{mapping = aes()}, we write only \\texttt{aes()} in the code chunk?\n\n:::\n\n## Visualization of two variables.\n\n### Two continous variables.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weights dataset, mother's weight at last menstrual period and birth weight of the infant are continuous variables. We might be interested in looking at how mother's weight is associated with birth weight of an infant.\n\n:::\n\n#### Scatter plot\n\n:::{style=\"text-align:justify\"}\n\nThe `geom_point` is used to create scatter plots. The scatter plot is most useful for displaying the relationship between two continuous variables.\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt), \n             color = \"red\",\n             size = 1,\n             shape = 1,\n             stroke = 1) \n\n```\n\n**Tips**\n\n-   Shape of a scatter plot can be changed using numbers (see below)\n\n-   Stroke argument in scatter plot determines the width of the border of the shapes\n\n-   In scatter plots, the fill argument works with selected shapes\n\n![](images/shapes_visualization.JPG){fig-align=\"center\" width=\"300\"}\n\n-   What happens if the size is changed to 10?\n\n-   When would you like to reduce the size further?\n\n-   Can we use geom_point to look at relationships between two variables, even if they are not continuous variables?\n\n-   Try using \\texttt{geom\\_jitter} instead of \\texttt{geom\\_point}. What do you observe?\n\n:::\n\n#### Scatter plot with regression line\n\n:::{style=\"text-align:justify\"}\n\nFurther, we can add a regression line to understand the relationship by using `geom_smooth`. It aids the eye in seeing patterns, especially in the presence of overplotting.\n\n```{r}\nggplot(data = df) +\n  geom_point(aes(x = lwt, y = bwt), \n             color = \"red\",\n             size = 1,\n             shape = 1,\n             stroke = 1) +\n  geom_smooth(aes(x = lwt, y = bwt),\n              method = lm,\n              se = T)\n\n```\n\n**Tips** Change the method to loess. What do you observe?\n\n:::\n\n### One discrete and one continous variable.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weights dataset, smoking history is categorical and birth weight is a continuous variable. We might be interested to estimate if maternal smoking history has effect on infant birth weights.\n\n:::\n\n#### Bar chart\n\n:::{style=\"text-align:justify\"}\n\nWhile using bar charts for two variables, an important additional argument which is used is `stat =` . Lets see!\n\n```{r}\nggplot(data = df) + \n  geom_bar(aes(x = smoke, y = bwt),\n           stat = \"identity\")\n```\n\nAlternatively, `geom_col` can be used. As compared to `geom_bar`, since counts the number of cases at each x position, additional argument `stat =` is not required.\n\n```{r}\nggplot(data = df) + \n  geom_col(aes(x = smoke, y = bwt))\n```\n\n:::\n\n#### Box and whisker plot\n\n```{r}\nggplot(data = df) + \n  geom_boxplot(aes(x = smoke, y = bwt),\n               coef = 1.5)\n```\n\n:::{style=\"text-align:justify\"}\n\n**Tips** Look at help menu to see additional arguments and change outlier color to red.\n:::\n\n#### Dot plot\n\n:::{style=\"text-align:justify\"}\n\nWhile creating a dot plot an additional mandatory argument in settings is `binaxis = \" \"`. The axis chosen is the axis with continuous variable.\n\nUse `geom_dotplot` to create dot plot between smoking history and birth weight.\n\n:::\n\n### Two discrete variables\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the dataset, smoking history and whether the infants birth weight was low or not are two discrete/ categorical variables. As a researcher, we would like to see the relationship between these two discrete variables.\n\n:::\n\n#### Position adjustments in bar chart\n\n:::{style=\"text-align:justify\"}\n\nTo see relationships between two discrete variables, multiple bar charts and component bar charts are used. Till now, the `fill` argument has been used in the `setting` section of the code. If you look carefully, while in the setting section, we manually placed the value/ color. The same argument can also be used in `mapping` section within `aesthetics`.\n\n```{r}\nggplot(data = df) + \n  geom_bar(aes(x = smoke, fill = race),\n           position = \"dodge\")\n```\n\nReplace \\texttt{position = \"dodge\"} to \\texttt{position = \"fill\"}. What happens?\n\n:::\n\n## Visualization of three variables.\n\n:::{style=\"text-align:justify\"}\n\n**Illustrative example**: In the birth weight dataset, a researcher is interested to look at relationship between maternal weight, smoking history, and infants birth weight.\n\n**Tip**\n\nWhen the setting arguments are shifted to mapping section, the computer automatically maps the value to develop the plot.\n\nTo visualize three or more variables, the settings arguments of color, shape, and size can be shifted to mapping section of the template we were using. Lets see!\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, color = smoke))\n```\n\n:::\n\n## Visualization of four variables.\n\n:::{style=\"text-align:justify\"}\n\nNow, lets see whether the race of mother is also playing a role in addition to her weight and smoking history in determining birth weight of the child\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, \n                 color = smoke, \n                 shape = factor(race)),\n             size = 3)\n```\n\nFor incorporating additional variables, multiple approaches such as 3D visualizations, animations, facet charts, etc can be used. For further details, refer to <https://exts.ggplot2.tidyverse.org/gallery/>\n\n:::\n\n## Facet plots.\n\n:::{style=\"text-align:justify\"}\n\n`facet_grid()` forms a matrix of panels defined by row and column faceting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data. If you have only one variable with many levels, try facet_wrap().\n\n```{r}\nggplot(data = df) + \n  geom_point(aes(x = lwt, y = bwt, color = smoke))+\n  facet_grid(.~race)\n\n```\n\n-   What happens if we change \\texttt{.\\~ race} to \\texttt{race \\~ .}\n\n-   Use facet_wrap instead of `facet_grid`. What do you observe?\n\n:::\n\n## Way forward\n\n### Additional components\n\n:::{style=\"text-align:justify\"}\n\nNow, we know how to create the plot. However, plot has additional components such as title, subtitle, caption, axis labels, legend, etc. The same also requires deliberation and details for the same can be learnt from multiple resources. We recommend R Graphics Cookbook [*https://r-graphics.org/*](https://r-graphics.org/){.uri} as a good resource for the same. We are introducing you to this important aspect of data visualization, however considering the present workshop as an introductory workshop and with time constraints, we plan to cover these aspects during intermediate/ advanced levels only.\n\n```{r}\nggplot(data = df) + # Template\n  geom_freqpoly( # geom\n    mapping = aes(x = bwt, color = smoke), # mapping\n    binwidth = 400,\n    size = 1.5)  + \n  labs(title = \"Birth weight and maternal smoking\", # Title\n       subtitle = \"Density plots\", # Subtitle\n       caption = \"Source: Low Birth Weight data (MASS)\", # Caption\n       x = \"Birth Weights (grams)\", # x axis label\n       y = \"Frequency\",# y axis label\n       color = \"Maternal Smoking history\")  + # Legend title\n  geom_text(x = 2400, # Additional text in the plot\n            y = 10, \n            label = \" Ideal Birth weight\", \n            color = \"#990000\", # RGB color coding palette\n            angle = 90,\n            alpha = .5,)+\n  geom_vline(xintercept= 2500, colour=\"#009900\") + # Line insert \n  theme(legend.position = \"left\") + # Legend settings\n  theme_minimal() # Choosing background theme\n```\n\n### Maps\n\nR is a powerful programming language. It has capabilities to create its own GIS environment. Though spatial analytics including spatial data visualization requires additional packages, to introduce the domain, we shall be using India spatial file and make a basic map within the `tidyverse`!\n\n```{r eval=FALSE, include=FALSE, echo=T}\n#| eval: false\n#| include: false\n#| echo: true\n\n# Loading data \nindia_rintro2022 <- read_rds(\"india_rintro2022.rds\")\n# Creating base map\nggplot(data = india_rintro2022)+\n  geom_sf()\n```\n\n```{r echo=FALSE, fig.align=\"center\", fig.fullwidth=TRUE, out.width=\"60%\"}\nknitr::include_graphics(here::here('images',\"map1.JPG\") )\n```\n\nSince the map provided as demo is against the cartographic principles, despite being an introductory module, we would like you to get an exposure of cartographically correct map too!\n\n![](images/map2.JPG){fig-align=\"center\" width=\"500\"}\n\n```{r eval=FALSE, fig.cap=\"Map of states in India\", fig.fullwidth=T, fig.height=9, fig.width=12, message=FALSE, warning=FALSE, include=FALSE}\nlibrary(sf)\nindia_rintro2022$abbr <- c(\"LA\",\"AP\",\n                           \"AR\", \"AS\",\n                           \"BR\", \"CH\",\n                           \"CT\", \"DL\",\n                           \"GA\", \"GJ\",\n                           \"HR\", \"HP\",\n                           \"JH\", \"KA\",\n                           \"KL\", \"MP\",\n                           \"MH\",\"MN\",\n                           \"ML\", \"MZ\",\n                           \"NL\", \"OR\",\n                           \"PY\", \"PB\",\n                           \"RJ\", \"SK\",\n                           \"TN\", \"TR\",\n                           \"UP\", \"UT\",\n                           \"WB\", \"TG\",\n                           \"JK\", \"AN\",\n                           \"LD\", \"DN\")\n\nindia_rintro2022 <- cbind(india_rintro2022, st_coordinates(st_centroid(india_rintro2022)))\n\n\n\n\n\nggplot() +\n  geom_sf(data = india_rintro2022, aes(fill = factor(NAME_1))) + \n  labs(title = \"States in India\",\n       caption = \"Credits: AMCHSS, SCTIMST Geospatial library\",\n       fill = \"States\") +\n  xlab(\"Longitude\") +\n  ylab(\"Latitude\") +\n  ggspatial::annotation_north_arrow(location = \"tr\",\n                                    height = unit(1.5, \"cm\"),\n                                    width = unit(1.5, \"cm\"))+\n  ggspatial::annotation_scale(location = \"bl\") +\n  theme(legend.position = \"none\") +\n  geom_text(data = india_rintro2022, aes(x = X, y = Y, label = abbr),\n            color = \"black\", fontface = \"bold\", check_overlap = T, size = 2)\n```\n\n:::\n\n### Visual analytics\n\n:::{style=\"text-align:justify\"}\n\nThe domain of data visualization has gone beyond just visualizing data. Visual analytics and data visualization is now used across the data life cycle in epidemiology and health care. It has moved beyond descriptive epidemiology and is used for hypothesis testing, machine learning, artificial intelligence, time series analysis, spatio-temporal epidemiology, and many others.\n\nHope you have enjoyed the session! The Jump board is ready! Practice and see the power of visual analytics!! Best Wishes.\n\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"embed-resources":true,"output-file":"data_visual.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}