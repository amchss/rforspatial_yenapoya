{"title":"Summary Tables","markdown":{"yaml":{"embed-resources":true},"headingText":"Summary Tables","containsRefs":false,"markdown":"\n\n\n## Basic Statistical Analysis using R\n\n\n![](images/moderndive.PNG){fig-align=\"center\" width=\"300\"}\n\n### Descriptive statistics\n\n```{r}\n#| include: false\n\nlibrary(tidyverse)\ndf <- MASS::birthwt\ndf <- df %>% \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) %>% \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) %>% \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n**Measures of central tendency**\n\n**Mean** \n\nThe function `mean()` is used to calculate this in R. The basic syntax for calculating mean in R is `mean(x, trim = 0, na.rm = FALSE, ...)`. Following is the description of the parameters used:\n\nx is the input vector. trim is used to drop some observations from both end of the sorted vector. na.rm is used to remove the missing values from the input vector.\n\n**Median** \n\nThe `median()` function is used in R to calculate this value. The basic syntax for calculating median in R is `median(x, na.rm = FALSE)`. Following is the description of the parameters used\n\nx is the input vector. na.rm is used to remove the missing values from the input vector.\n\nThe `summarise()` creates a new data frame. It will have one (or more) rows for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarizing all observations in the input. It will contain one column for each grouping variable and one column for each of the summary statistics that you have specified.\n\n**Illustrative example**. Let us calculate mean and median birth weight of all infants in birthwt data.\n\n```{r}\ndf %>% \n  summarize(\n    mean_bwt = mean(bwt, na.rm = F),\n    median_bwt = median(bwt)\n  ) \n```\n\n**Illustrative example**: Mean of two or more groups. Mean Birth weight among those with history of maternal smoking and those without history of maternal smoking\n\nMost data operations are done on groups defined by variables. `group_by()` takes an existing data set and converts it into a grouped data set where operations are performed \"by group\".`ungroup()` removes grouping.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(mean_bwt = mean(bwt),\n            .groups = \"keep\") \n```\n\n**Measures of dispersion**\n\n**Standard deviation** \n\n`sd` function computes the standard deviation of the values in x. Its syntax is `sd(x, na.rm = FALSE)`. If na.rm is TRUE then missing values are removed before computation proceeds.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(mean_bwt = mean(bwt),\n            sd_bwt = sd(bwt),\n            .groups = \"keep\") \n```\n\n**Interquartile range** \n\n`IQR` computes interquartile range of the x values.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(median_bwt = median(bwt),\n            iqr_bwt = IQR(bwt),\n            .groups = \"keep\") \n```\n\n\n## Publicaton ready summary tables\n\n### Rationale\n\nIn routine, it is very time consuming, frustrating, and error prone to write again the results/ outputs obtained from statistical software into the writing and communication documents, be it an article/ manuscript or a dissertation or a thesis.\n\nFurther, Most courses and tutorials on Data Analytics using R teach a bunch of R functions but do not lead us to the outcome, which is to produce analyzed tables.\n\nIn R, there are certain packages which enable you to create **publication ready tables** which can be incorporated into research dissemination documents directly or with minor modifications. This saves a lot of mundane and unnecessary work and provides more time for interpretation and domain expertise related work.\n\nWe shall be using the `gtsummary` package which is compatible with tidy principles of working and creates presentation-ready tables, regression models, and more. The code to create the tables is concise and highly customizable.\n\n![](images/gt_summary.png){fig-align=\"center\" width=\"100\"}\n\n## Introduction to publication ready tables!!\n\nThe `tbl_summary()` function calculates descriptive statistics for continuous, categorical, and dichotomous variables in R, and presents the results in a beautiful, customizable summary table ready for publication. To introduce `tbl_summary()` we will show the most basic behaviour first, which actually produces a large and beautiful table. Then, we will examine in detail how to make adjustments and more tailored tables.The default behavior of tbl_summary() is quite incredible - it takes the columns you provide and creates a summary table in one command. The function prints statistics appropriate to the column class: median and inter-quartile range (IQR) for numeric columns, and counts (%) for categorical columns. Missing values are converted to 'Unknown'.\n\n**Illustrative example**: A researcher is interested to know the basic descriptive analysis of the first five variables in `low birth weight` data.\n\n```{r}\n#| include: false\nlibrary(gtsummary)\nlibrary(tidyverse)\ndf <- MASS::birthwt\ndf <- df %>% \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) %>% \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) %>% \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n```{r}\n#| message: false\n#| warning: false\n\n\ndf |>  \n  select(low, bwt) |>\n  tbl_summary() |>  \n  as_hux_table()\n```\n\n*Note*\n\n*The sensible defaults with this basic usage: each of the defaults may be customized. Variable types are automatically detected so that appropriate descriptive statistics are calculated. Label attributes from the data set are automatically printed. Missing values are listed as \"Unknown\" in the table. Variable levels are indented and footnotes are added.*\n\n## Adjustments\n\n### Stratified tables.\n\nYou can stratify your table by a column (e.g. by outcome), creating a 2-way table by using `by =` argument in the `tbl_summary()` function.\n\n```{r}\n#| message: false\n\ndf |>  \n  select(smoke, low) |> \n  tbl_summary(by = low) |>  as_hux_table()\n```\n\n### Customizing output of selected variables.\n\nUse an equations to specify which statistics to show and how to display them. There are two sides to the equation, separated by a tilde `~`. On the right side, in quotes, is the statistical display desired, and on the left are the columns to which that display will apply.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}\"\n  ) %>% \n  as_hux_table()\n```\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\"\n  ) %>% \n  as_hux_table()\n```\n\n### Changing label of a single variable.\n\nAdjust how the column name should be displayed. Provide the column name and its desired label separated by a tilde. The default is the column name. This is done with help of argument `label =` in `tbl_summary` function.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\",\n    label = bwt ~ \"Birth Weight\"\n  ) %>% as_hux_table()\n```\n\n### Changing labels of multiple variables.\n\nYou can change labels of multiple variables by providing the labels as a `list` to the `label` argument.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\",\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n\n```\n\n*Can we provide a list to the statistic argument also for customizing statistical output? Try it!*\n\n### Multiline output for a single variable.\n\nIf you want to print multiple lines of statistics for variables, you can indicate this by setting the `type =` to `“continuous2”`. You can combine all of the previously shown elements in one table by choosing which statistics you want to show. To do this you need to tell the function that you want to get a table back by entering the type as `continuous2`.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>%\n  tbl_summary(\n    by = low,\n    type = bwt ~ \"continuous2\",\n    statistic = bwt~c(\n      \"{mean}, {sd}\",\n      \"{median}, ({p25}, {p75})\"),\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n```\n\n### Multiline output for all continuous variables.\n\nIf you wish to print multiline output for all continuous variables, instead of providing \"continuous2\" argument specified by name of the variable, use `continous()` in `type` and `statistic`arguments.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke, lwt) %>%\n  tbl_summary(\n    by = low,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous()~c(\n      \"{mean}, {sd}\",\n      \"{median}, ({p25}, {p75})\"),\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n```\n\n### Multiline output for categorical variables.\n\nThe `type` argument in `tbl_summary` function is an optional argument which includes details for the customized outputs according to the type of variables.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>% \n  tbl_summary(type = all_continuous() ~ \"continuous2\", \n              statistic = list(all_continuous() ~ c(\n                \"{mean} ({sd})\", \n                \"{median} ({p25}, {p75})\"), \n      all_categorical() ~ \"{n} ({p}%)\"),   \n      digits = all_continuous() ~ 1) %>% # setting for decimal points\n  as_hux_table()\n```\n\n*Tip*\n\nHaving a reproducible code works wonders! Try writing this reproducible code for your own tidy dataset. Voila! You will have publication ready tables.\n\n## Inferential statistics and publication ready tables.\n\nCompare the difference in means for a continuous variable in two groups. `add_p()`function from `gtsummary`package adds p-values to `gtsummary` table\n\n**Illustrative example**: `t test`\n\n```{r}\n#| message: false\n\ndf |>  \n  select(bwt, smoke) |>  \n  tbl_summary(by = smoke) |>  \n  add_p(bwt ~ \"t.test\") |>  \n  as_hux_table()\n```\n\n*What happens if we do not pass any argument to* \\texttt{add\\_p()} function? Try it!\n\n### Statistical tests/ methods available in `add_p()` function.\n\nTo find the list of tests available internally within `gtsummary`, type `?gtsummary::tests` in your console. What do you see? There are `tbl_summary()` variants as well as `add_difference` variant. Refer to `gtsummary` vignettes available at <https://cran.r-project.org/web/packages/gtsummary/index.html> for more details.\n\n### Automated Inferential statistics with Publication ready tables\n\n**Illustrative example.** A researcher is interested to know whether there is a significant difference in mean birth weight as well as proportion of low birth weight babies among mothers with history of smoking during pregnancy as compared to those without history of smoking during pregnancy.\n\nTo answer the question for this study, the summary statistics should be grouped by smoking history group, which can be done by using the `by=` argument. To compare two or more groups, include `add_p()` with the function, which detects variable type and uses an appropriate statistical test.\n\n```{r}\n#| message: false\n\ndf |> \n  select(smoke, bwt, low) |>  \n  tbl_summary(by = smoke) |>  \n  add_p() |>  \n  as_hux_table()\n```\n\n<!-- ### Hypothesis testing for single mean -->\n\n<!-- **Illustrative example**: A researcher conducted a population based study in XYZ place and found that the mean birth weight of infants is 2500g. Looking at the birth weight dataset, the researcher is curious as to whether the mean birth weight in this data set is similar to XYZ population. In other words, the null hypothesis $H_0: \\mu _{bwt} = 2500 g$ -->\n\n<!-- ### Hypothesis testing for single proportion -->\n\n<!-- **Illustrative example**: $H_0: p\\_{smoke} = 0.4$ -->\n\n<!-- ### Hypothesis testing: difference between means -->\n\n<!-- **Illustrative example**: -->\n\n<!-- \\begin{equation} -->\n\n<!-- H_0: \\mu _{bwt-non-smoke} = \\mu _{bwt-smoke}  -->\n\n<!-- \\end{equation} -->\n\n<!-- ### Test of independence: Chi square test -->\n\n<!-- **Illustrative example**:  -->\n\n<!-- \\begin{equation} -->\n\n<!-- H_0: p _{low-non-smoke} = p _{low-smoke}  -->\n\n<!-- \\end{equation} -->\n\n<!-- ### Correlations -->\n\n<!-- **Illustrative example**: Correlation between maternal weight before pregnancy and infant birth weight -->\n\n## `report` a Data\n\nThe `report` package core objective is to streamline the process of presenting models and data frames in adherence to established formatting standards such as APA style. By automating the report generation process, \"report\" ensures consistency and quality in the presentation of results, facilitating the dissemination of research findings while adhering to best practices guidelines. \n\nWe haven't explored the details of the 'report' package yet, but it's an exciting tool. It connects R's analytical power with the polished presentation needed for scholarly papers. Taking a closer look at its features could offer valuable insights and benefits.\n\n## Way forward {.unnumbered}\n\nWe have introduced you to one of the most powerful package currently used to develop publication ready tables. It might seem that there is a lot to learn for making publication ready tables using R. Initially, one might feel unnecessary to learn these syntax. However, if you seriously are into creating tables in your professional career, it is recommended and worth investing time to learn these syntax. We are confident your initial effort will save a lot of time subsequently and make you more efficient and accurate in future. Best wishes!\n\n\n","srcMarkdownNoYaml":"\n\n# Summary Tables\n\n## Basic Statistical Analysis using R\n\n\n![](images/moderndive.PNG){fig-align=\"center\" width=\"300\"}\n\n### Descriptive statistics\n\n```{r}\n#| include: false\n\nlibrary(tidyverse)\ndf <- MASS::birthwt\ndf <- df %>% \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) %>% \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) %>% \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n**Measures of central tendency**\n\n**Mean** \n\nThe function `mean()` is used to calculate this in R. The basic syntax for calculating mean in R is `mean(x, trim = 0, na.rm = FALSE, ...)`. Following is the description of the parameters used:\n\nx is the input vector. trim is used to drop some observations from both end of the sorted vector. na.rm is used to remove the missing values from the input vector.\n\n**Median** \n\nThe `median()` function is used in R to calculate this value. The basic syntax for calculating median in R is `median(x, na.rm = FALSE)`. Following is the description of the parameters used\n\nx is the input vector. na.rm is used to remove the missing values from the input vector.\n\nThe `summarise()` creates a new data frame. It will have one (or more) rows for each combination of grouping variables; if there are no grouping variables, the output will have a single row summarizing all observations in the input. It will contain one column for each grouping variable and one column for each of the summary statistics that you have specified.\n\n**Illustrative example**. Let us calculate mean and median birth weight of all infants in birthwt data.\n\n```{r}\ndf %>% \n  summarize(\n    mean_bwt = mean(bwt, na.rm = F),\n    median_bwt = median(bwt)\n  ) \n```\n\n**Illustrative example**: Mean of two or more groups. Mean Birth weight among those with history of maternal smoking and those without history of maternal smoking\n\nMost data operations are done on groups defined by variables. `group_by()` takes an existing data set and converts it into a grouped data set where operations are performed \"by group\".`ungroup()` removes grouping.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(mean_bwt = mean(bwt),\n            .groups = \"keep\") \n```\n\n**Measures of dispersion**\n\n**Standard deviation** \n\n`sd` function computes the standard deviation of the values in x. Its syntax is `sd(x, na.rm = FALSE)`. If na.rm is TRUE then missing values are removed before computation proceeds.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(mean_bwt = mean(bwt),\n            sd_bwt = sd(bwt),\n            .groups = \"keep\") \n```\n\n**Interquartile range** \n\n`IQR` computes interquartile range of the x values.\n\n```{r}\ndf %>% \n  group_by(smoke) %>% \n  summarise(median_bwt = median(bwt),\n            iqr_bwt = IQR(bwt),\n            .groups = \"keep\") \n```\n\n\n## Publicaton ready summary tables\n\n### Rationale\n\nIn routine, it is very time consuming, frustrating, and error prone to write again the results/ outputs obtained from statistical software into the writing and communication documents, be it an article/ manuscript or a dissertation or a thesis.\n\nFurther, Most courses and tutorials on Data Analytics using R teach a bunch of R functions but do not lead us to the outcome, which is to produce analyzed tables.\n\nIn R, there are certain packages which enable you to create **publication ready tables** which can be incorporated into research dissemination documents directly or with minor modifications. This saves a lot of mundane and unnecessary work and provides more time for interpretation and domain expertise related work.\n\nWe shall be using the `gtsummary` package which is compatible with tidy principles of working and creates presentation-ready tables, regression models, and more. The code to create the tables is concise and highly customizable.\n\n![](images/gt_summary.png){fig-align=\"center\" width=\"100\"}\n\n## Introduction to publication ready tables!!\n\nThe `tbl_summary()` function calculates descriptive statistics for continuous, categorical, and dichotomous variables in R, and presents the results in a beautiful, customizable summary table ready for publication. To introduce `tbl_summary()` we will show the most basic behaviour first, which actually produces a large and beautiful table. Then, we will examine in detail how to make adjustments and more tailored tables.The default behavior of tbl_summary() is quite incredible - it takes the columns you provide and creates a summary table in one command. The function prints statistics appropriate to the column class: median and inter-quartile range (IQR) for numeric columns, and counts (%) for categorical columns. Missing values are converted to 'Unknown'.\n\n**Illustrative example**: A researcher is interested to know the basic descriptive analysis of the first five variables in `low birth weight` data.\n\n```{r}\n#| include: false\nlibrary(gtsummary)\nlibrary(tidyverse)\ndf <- MASS::birthwt\ndf <- df %>% \n  mutate(smoke = factor(smoke,\n                        levels = c(0,1),\n                        labels = c(\"Non Smoker\",\n                                   \"Smoker\"))) %>% \n  mutate(race = factor(race,\n                       levels = c(1,2,3),\n                       labels = c(\"White\",\n                                  \"Black\",\n                                  \"Other\"))) %>% \n  mutate(low = factor(low,\n                      levels =  c(0,1),\n                      labels = c(\"Normal\", \n                                 \"Low Birth Weight\")))\n  \n```\n\n```{r}\n#| message: false\n#| warning: false\n\n\ndf |>  \n  select(low, bwt) |>\n  tbl_summary() |>  \n  as_hux_table()\n```\n\n*Note*\n\n*The sensible defaults with this basic usage: each of the defaults may be customized. Variable types are automatically detected so that appropriate descriptive statistics are calculated. Label attributes from the data set are automatically printed. Missing values are listed as \"Unknown\" in the table. Variable levels are indented and footnotes are added.*\n\n## Adjustments\n\n### Stratified tables.\n\nYou can stratify your table by a column (e.g. by outcome), creating a 2-way table by using `by =` argument in the `tbl_summary()` function.\n\n```{r}\n#| message: false\n\ndf |>  \n  select(smoke, low) |> \n  tbl_summary(by = low) |>  as_hux_table()\n```\n\n### Customizing output of selected variables.\n\nUse an equations to specify which statistics to show and how to display them. There are two sides to the equation, separated by a tilde `~`. On the right side, in quotes, is the statistical display desired, and on the left are the columns to which that display will apply.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}\"\n  ) %>% \n  as_hux_table()\n```\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\"\n  ) %>% \n  as_hux_table()\n```\n\n### Changing label of a single variable.\n\nAdjust how the column name should be displayed. Provide the column name and its desired label separated by a tilde. The default is the column name. This is done with help of argument `label =` in `tbl_summary` function.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\",\n    label = bwt ~ \"Birth Weight\"\n  ) %>% as_hux_table()\n```\n\n### Changing labels of multiple variables.\n\nYou can change labels of multiple variables by providing the labels as a `list` to the `label` argument.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>%\n  tbl_summary(\n    by = low,\n    statistic = bwt~\"{mean}, {sd}\",\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n\n```\n\n*Can we provide a list to the statistic argument also for customizing statistical output? Try it!*\n\n### Multiline output for a single variable.\n\nIf you want to print multiple lines of statistics for variables, you can indicate this by setting the `type =` to `“continuous2”`. You can combine all of the previously shown elements in one table by choosing which statistics you want to show. To do this you need to tell the function that you want to get a table back by entering the type as `continuous2`.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>%\n  tbl_summary(\n    by = low,\n    type = bwt ~ \"continuous2\",\n    statistic = bwt~c(\n      \"{mean}, {sd}\",\n      \"{median}, ({p25}, {p75})\"),\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n```\n\n### Multiline output for all continuous variables.\n\nIf you wish to print multiline output for all continuous variables, instead of providing \"continuous2\" argument specified by name of the variable, use `continous()` in `type` and `statistic`arguments.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke, lwt) %>%\n  tbl_summary(\n    by = low,\n    type = all_continuous() ~ \"continuous2\",\n    statistic = all_continuous()~c(\n      \"{mean}, {sd}\",\n      \"{median}, ({p25}, {p75})\"),\n    label = list(bwt ~ \"Birth Weight\",\n                 smoke ~ \"Smoking history\")) %>% as_hux_table()\n```\n\n### Multiline output for categorical variables.\n\nThe `type` argument in `tbl_summary` function is an optional argument which includes details for the customized outputs according to the type of variables.\n\n```{r}\n#| message: false\n\ndf %>% \n  select(bwt, low, smoke) %>% \n  tbl_summary(type = all_continuous() ~ \"continuous2\", \n              statistic = list(all_continuous() ~ c(\n                \"{mean} ({sd})\", \n                \"{median} ({p25}, {p75})\"), \n      all_categorical() ~ \"{n} ({p}%)\"),   \n      digits = all_continuous() ~ 1) %>% # setting for decimal points\n  as_hux_table()\n```\n\n*Tip*\n\nHaving a reproducible code works wonders! Try writing this reproducible code for your own tidy dataset. Voila! You will have publication ready tables.\n\n## Inferential statistics and publication ready tables.\n\nCompare the difference in means for a continuous variable in two groups. `add_p()`function from `gtsummary`package adds p-values to `gtsummary` table\n\n**Illustrative example**: `t test`\n\n```{r}\n#| message: false\n\ndf |>  \n  select(bwt, smoke) |>  \n  tbl_summary(by = smoke) |>  \n  add_p(bwt ~ \"t.test\") |>  \n  as_hux_table()\n```\n\n*What happens if we do not pass any argument to* \\texttt{add\\_p()} function? Try it!\n\n### Statistical tests/ methods available in `add_p()` function.\n\nTo find the list of tests available internally within `gtsummary`, type `?gtsummary::tests` in your console. What do you see? There are `tbl_summary()` variants as well as `add_difference` variant. Refer to `gtsummary` vignettes available at <https://cran.r-project.org/web/packages/gtsummary/index.html> for more details.\n\n### Automated Inferential statistics with Publication ready tables\n\n**Illustrative example.** A researcher is interested to know whether there is a significant difference in mean birth weight as well as proportion of low birth weight babies among mothers with history of smoking during pregnancy as compared to those without history of smoking during pregnancy.\n\nTo answer the question for this study, the summary statistics should be grouped by smoking history group, which can be done by using the `by=` argument. To compare two or more groups, include `add_p()` with the function, which detects variable type and uses an appropriate statistical test.\n\n```{r}\n#| message: false\n\ndf |> \n  select(smoke, bwt, low) |>  \n  tbl_summary(by = smoke) |>  \n  add_p() |>  \n  as_hux_table()\n```\n\n<!-- ### Hypothesis testing for single mean -->\n\n<!-- **Illustrative example**: A researcher conducted a population based study in XYZ place and found that the mean birth weight of infants is 2500g. Looking at the birth weight dataset, the researcher is curious as to whether the mean birth weight in this data set is similar to XYZ population. In other words, the null hypothesis $H_0: \\mu _{bwt} = 2500 g$ -->\n\n<!-- ### Hypothesis testing for single proportion -->\n\n<!-- **Illustrative example**: $H_0: p\\_{smoke} = 0.4$ -->\n\n<!-- ### Hypothesis testing: difference between means -->\n\n<!-- **Illustrative example**: -->\n\n<!-- \\begin{equation} -->\n\n<!-- H_0: \\mu _{bwt-non-smoke} = \\mu _{bwt-smoke}  -->\n\n<!-- \\end{equation} -->\n\n<!-- ### Test of independence: Chi square test -->\n\n<!-- **Illustrative example**:  -->\n\n<!-- \\begin{equation} -->\n\n<!-- H_0: p _{low-non-smoke} = p _{low-smoke}  -->\n\n<!-- \\end{equation} -->\n\n<!-- ### Correlations -->\n\n<!-- **Illustrative example**: Correlation between maternal weight before pregnancy and infant birth weight -->\n\n## `report` a Data\n\nThe `report` package core objective is to streamline the process of presenting models and data frames in adherence to established formatting standards such as APA style. By automating the report generation process, \"report\" ensures consistency and quality in the presentation of results, facilitating the dissemination of research findings while adhering to best practices guidelines. \n\nWe haven't explored the details of the 'report' package yet, but it's an exciting tool. It connects R's analytical power with the polished presentation needed for scholarly papers. Taking a closer look at its features could offer valuable insights and benefits.\n\n## Way forward {.unnumbered}\n\nWe have introduced you to one of the most powerful package currently used to develop publication ready tables. It might seem that there is a lot to learn for making publication ready tables using R. Initially, one might feel unnecessary to learn these syntax. However, if you seriously are into creating tables in your professional career, it is recommended and worth investing time to learn these syntax. We are confident your initial effort will save a lot of time subsequently and make you more efficient and accurate in future. Best wishes!\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"embed-resources":true,"output-file":"gtsummary.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}